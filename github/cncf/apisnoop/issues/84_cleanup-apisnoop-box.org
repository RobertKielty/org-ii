#+TITLE: #84: Cleanup Apisnoop Box
#+AUTHOR: Zach Mandeville
#+AUTHOR: Hippie Hacker
#+EMAIL: zz@ii.coop
#+EMAIL: hh@ii.coop
#+DATE: 30th of January, 2019
#+CREATOR: ii.coop
#+PROPERTY: header-args:shell :results output code verbatim replace
#+PROPERTY: header-args:shell+ :prologue "exec 2>&1\n"
#+PROPERTY: header-args:shell+ :epilogue ":\n"
#+PROPERTY: header-args:shell+ :wrap "EXAMPLE :noeval t"
#+PROPERTY: header-args:shell+ :dir (symbol-value 'org-file-dir)
#+PROPERTY: header-args:shell+ :var TMATE_SOCKET=(symbol-value 'socket)
#+PROPERTY: header-args:tmate  :socket (symbol-value 'socket)
#+PROPERTY: header-args:tmate+ :session (concat (user-login-name) ":" (nth 4 (org-heading-components)))
#+PROPERTY: header-args:tmate+ :prologue (concat "cd " org-file-dir "\n")
#+STARTUP: showeverything

* Setting up session Connecting
  :PROPERTIES:
  :header-args:elisp+: :var ssh-host="root@dev.apisnoop.cncf.ci"
  :END:

#+NAME ssh
#+BEGIN_SRC elisp
(set (make-local-variable 'ssh-host) "root@dev.apisnoop.cncf.ci")
(set (make-local-variable 'start-ssh-command) (concat "ssh -ttA -L " socket ":" socket " " ssh-host))
(set (make-local-variable 'start-tmate-command) (concat "tmate -S " socket " new-session -A -s " user-login-name " -n main "))
(gui-select-text (concat start-ssh-command " " start-tmate-command))
#+END_SRC

#+RESULTS:
: ssh -ttA -L /tmp/hh.84_cleanup-apisnoop-box.diisocket:/tmp/hh.84_cleanup-apisnoop-box.diisocket root@dev.apisnoop.cncf.ci tmate -S /tmp/hh.84_cleanup-apisnoop-box.diisocket new-session -A -s hh -n main 

#+NAME retrieve ssh-string
#+BEGIN_SRC elisp
;\"tmate wait tmate-ready && bash --login\"
(set (make-local-variable 'get-tmate-command) (concat "ssh -tA " ssh-host " tmate -S " socket " \"wait tmate-ready \\; display -p '#{tmate_ssh}'\" | xclip -i -sel p -f | xclip -i -sel c"))
(gui-select-text get-tmate-command)
#+END_SRC

#+RESULTS:
: ssh -tA root@dev.apisnoop.cncf.ci tmate -S /tmp/hh.84_cleanup-apisnoop-box.diisocket "wait tmate-ready \; display -p '#{tmate_ssh}'" | xclip -i -sel p -f | xclip -i -sel c

* foo
#+BEGIN_SRC tmate
pwd
#+END_SRC
* Our Issue
[[https://github.com/cncf/apisnoop/issues/84][Link to github]]
#+NAME: Issue Description
#+BEGIN_EXAMPLE
GIVEN That apisnoop developers want to be able to easily reason about our file structure and data flow
WHEN a developer ssh's into the apisnoop server
THEN they see a well-organized set of relevant files and nothing else
AND can easily reason about both the code and its infrastructure
#+END_EXAMPLE

We realized that, instead of cleaning up the existing box, it would be more productive to create a new box from scratch, so the box only contains exactly what we need.  We could then maybe make this the new default structure for the apisnoop repo, with everything else in a different 'exploratory' repo.

* Set Your Right Eye
  socket:  apisnoopfuntime
  name: zz-right
  
  now type =C-x C-e=
  you are now ready to run the commands on the remote box.
* remtoe sample
  #+BEGIN_SRC tmate
 pwd 
  #+END_SRC
* Footer
# Local Variables:
# eval: (set (make-local-variable 'org-file-dir) (file-name-directory buffer-file-name))
# eval: (set (make-local-variable 'user-buffer) (concat user-login-name "." (file-name-base buffer-file-name)))
# eval: (set (make-local-variable 'tmpdir) (make-temp-file (concat "/dev/shm/" user-buffer "-") t))
# eval: (set (make-local-variable 'socket) (concat "/tmp/" user-buffer ".diisocket"))
# eval: (set (make-local-variable 'select-enable-clipboard) t)
# eval: (set (make-local-variable 'select-enable-primary) t)
# eval: (set (make-local-variable 'start-ssh-command) (concat "ssh -L " socket ":" socket))
# eval: (set (make-local-variable 'start-tmate-command) (concat "tmate -S " socket " new-session -A -s " user-login-name " -n main \"tmate wait tmate-ready && tmate display -p '#{tmate_ssh}' | xclip -i -sel p -f | xclip -i -sel c; bash --login\""))
# eval: (xclip-mode 1) 
# eval: (gui-select-text start-ssh-command)
# eval: (gui-select-text start-tmate-command)
# org-babel-tmate-session-prefix: ""
# org-babel-tmate-default-window-name: "main"
# org-confirm-babel-evaluate: nil
# org-use-property-inheritance: t
# End:
