apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: gitlab-ii-coop-control-plane
  namespace: gitlab-ii-coop
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: PacketMachineTemplate
    name: gitlab-ii-coop-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          audit-log-path: '-'
          audit-policy-file: /etc/kubernetes/pki/audit-policy.yaml
          audit-webhook-config-file: /etc/kubernetes/pki/audit-sink.yaml
          cloud-provider: external
          v: "99"
      controllerManager:
        extraArgs:
          cloud-provider: external
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
    postKubeadmCommands:
    - |
      cat <<EOF >> /etc/network/interfaces
      auto lo:0
      iface lo:0 inet static
        address {{ .controlPlaneEndpoint }}
        netmask 255.255.255.255
      EOF
    - systemctl restart networking
    - mkdir -p /root/.kube;
    - cp -i /etc/kubernetes/admin.conf /root/.kube/config
    - export KUBECONFIG=/root/.kube/config
    - 'kubectl create secret generic -n kube-system packet-cloud-config --from-literal=cloud-sa.json=''{"apiKey": "{{ .apiKey }}","projectID": "7a44b778-41d2-49fa-9c92-99148516c600", "eipTag": "cluster-api-provider-packet:cluster-id:gitlab-ii-coop"}'''
    - kubectl taint node --all node-role.kubernetes.io/master-
    - kubectl apply -f https://github.com/packethost/packet-ccm/releases/download/v1.1.0/deployment.yaml
    preKubeadmCommands:
    - mkdir -p /etc/kubernetes/pki
    - |
      cat <<EOF > /etc/kubernetes/pki/audit-policy.yaml
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: RequestResponse
      EOF
    - |
      cat <<EOF > /etc/kubernetes/pki/audit-sink.yaml
      apiVersion: v1
      kind: Config
      clusters:
        - cluster:
            server: http://10.96.96.96:9900/events
          name: auditsink-cluster
      contexts:
        - context:
            cluster: auditsink-cluster
            user: ""
          name: auditsink-context
      current-context: auditsink-context
      users: []
      preferences: {}
      EOF
    - sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
    - swapoff -a
    - mount -a
    - |
      cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
      overlay
      br_netfilter
      EOF
    - modprobe overlay
    - modprobe br_netfilter
    - |
      cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      EOF
    - sysctl --system
    - |
      mkdir -p /etc/sudoers.d
      echo "%sudo    ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/sudo
      cp -a /root/.ssh /etc/skel/.ssh
      useradd -m -G users,sudo -u 1000 -s /bin/bash ii
    - apt-get -y update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
    - apt-get update -y
    - TRIMMED_KUBERNETES_VERSION=$(echo v1.20.0 | sed 's/\./\./g' | sed 's/^v//')
    - RESOLVED_KUBERNETES_VERSION=$(apt-cache policy kubelet | awk -v VERSION=${TRIMMED_KUBERNETES_VERSION} '$1~ VERSION { print $1 }' | head -n1)
    - apt-get install -y ca-certificates socat jq ebtables apt-transport-https cloud-utils prips containerd kubelet=${RESOLVED_KUBERNETES_VERSION} kubeadm=${RESOLVED_KUBERNETES_VERSION} kubectl=${RESOLVED_KUBERNETES_VERSION} lvm2
    - systemctl daemon-reload
    - systemctl enable --now containerd
    - chgrp users /var/run/docker.sock
    - ping -c 3 -q {{ .controlPlaneEndpoint }} && echo OK || ip addr add {{ .controlPlaneEndpoint }} dev lo
    - echo "ListenAddress $(ip a show dev bond0 | grep -v ':' | head -1 | awk '{print $2}' | cut -d '/' -f1)" > /etc/ssh/sshd_config.d/listen_on_node_ip.conf
    - systemctl restart sshd
  replicas: 3
  version: v1.20.0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: PacketMachineTemplate
metadata:
  name: gitlab-ii-coop-control-plane
  namespace: gitlab-ii-coop
spec:
  template:
    spec:
      OS: ubuntu_20_04
      billingCycle: hourly
      machineType: s3.xlarge.x86
      sshKeys:
      - ""
      tags: []
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: gitlab-ii-coop
  namespace: gitlab-ii-coop
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.244.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: gitlab-ii-coop-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: PacketCluster
    name: gitlab-ii-coop
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: PacketCluster
metadata:
  name: gitlab-ii-coop
  namespace: gitlab-ii-coop
spec:
  controlPlaneEndpoint:
    host: gitlab.ii.coop
    port: 6443
  facility: sjc1
  projectID: 7a44b778-41d2-49fa-9c92-99148516c600
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: gitlab-ii-coop
    pool: worker-a
  name: gitlab-ii-coop-worker-a
  namespace: gitlab-ii-coop
spec:
  clusterName: gitlab-ii-coop
  replicas: 0
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: gitlab-ii-coop
      pool: worker-a
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: gitlab-ii-coop
        pool: worker-a
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: gitlab-ii-coop-worker-a
      clusterName: gitlab-ii-coop
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: PacketMachineTemplate
        name: gitlab-ii-coop-worker-a
      version: v1.20.0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: PacketMachineTemplate
metadata:
  name: gitlab-ii-coop-worker-a
  namespace: gitlab-ii-coop
spec:
  template:
    spec:
      OS: ubuntu_20_04
      billingCycle: hourly
      machineType: s3.xlarge.x86
      sshKeys:
      - ""
      tags: []
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: gitlab-ii-coop-worker-a
  namespace: gitlab-ii-coop
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          criSocket: /var/run/containerd/containerd.sock
          kubeletExtraArgs:
            cloud-provider: external
      preKubeadmCommands:
      - sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
      - swapoff -a
      - mount -a
      - |
        cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF
      - modprobe overlay
      - modprobe br_netfilter
      - |
        cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF
      - sysctl --system
      - apt-get -y update
      - DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl
      - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
      - apt-get update -y
      - TRIMMED_KUBERNETES_VERSION=$(echo v1.20.0 | sed 's/\./\./g' | sed 's/^v//')
      - RESOLVED_KUBERNETES_VERSION=$(apt-cache policy kubelet | awk -v VERSION=${TRIMMED_KUBERNETES_VERSION} '$1~ VERSION { print $1 }' | head -n1)
      - apt-get install -y ca-certificates socat jq ebtables apt-transport-https cloud-utils prips containerd kubelet=${RESOLVED_KUBERNETES_VERSION} kubeadm=${RESOLVED_KUBERNETES_VERSION} kubectl=${RESOLVED_KUBERNETES_VERSION}
      - systemctl daemon-reload
      - systemctl enable containerd
      - systemctl start containerd
      - echo "ListenAddress $(ip a show dev bond0 | grep -v ':' | head -1 | awk '{print $2}' | cut -d '/' -f1)" > /etc/ssh/sshd_config.d/listen_on_node_ip.conf
      - systemctl restart sshd
