#+TITLE: setting up traefik
* Install
From https://github.com/containous/traefik/releases
#+BEGIN_SRC shell
curl -L \
  https://github.com/containous/traefik/releases/download/v2.0.0-alpha8/traefik_v2.0.0-alpha8_linux_amd64.tar.gz \
  | sudo tar xvfzC - /usr/local/bin traefik
#+END_SRC
* Configure
Based on https://docs.traefik.io/user-guide/docker-and-lets-encrypt/
** Networking / Files / Folders

#+BEGIN_SRC shell
docker network create web
mkdir -p /opt/traefik
touch /opt/traefik/docker-compose.yml
touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json
touch /opt/traefik/traefik.toml
#+END_SRC

** traifik/docker-compose.yaml
#+BEGIN_SRC yaml :tangle /opt/traefik/docker-compose.yml
  version: '2'

  services:
    traefik:
      # stable version from https://hub.docker.com/_/traefik
      image: traefik:v1.7.12
      restart: always
      ports:
        - 80:80
        - 443:443
      networks:
        - web
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /opt/traefik/traefik.toml:/traefik.toml
        - /opt/traefik/acme.json:/acme.json
      container_name: traefik

  networks:
    web:
      external: true
#+END_SRC

** traefik.toml

#+BEGIN_SRC toml :tangle /opt/traefik/traefik.toml
debug = true

# logLevel = "ERROR"
logLevel = "DEBUG"
defaultEntryPoints = ["https","http"]

[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
  [entryPoints.https.tls]

[retry]

[docker]
endpoint = "unix:///var/run/docker.sock"
domain = "sharing.io"
watch = true
exposedByDefault = false
# exposedByDefault = true

[acme]
email = "hh@ii.coop"
storage = "acme.json"
entryPoint = "https"
onHostRule = true
[acme.httpChallenge]
entryPoint = "http"
#+END_SRC
** hasura/docker-compose.yaml

#+BEGIN_SRC yaml :tangle ~/ii/apisnoop_v3/org/hasura/docker-compose.yaml
version: "2.1"

services:
  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.3.cli-migrations
    restart: always
    networks:
      - web
      # - bridge
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres@172.17.0.1:5432/hh
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
    volumes:
      - migrations:/hasura-migrations
    expose:
      - "8080"
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.basic.port=8080"
      - "traefik.basic.protocol=http"
      - "traefik.basic.frontend.rule=Host:hasura.sharing.io"
      # to add more ports on the same container
      # - "traefik.admin.port=9443"
      # - "traefik.admin.protocol=https"
      # - "traefik.admin.frontend.rule=Host:admin-hasura.sharing.io"
volumes:
  migrations:
networks:
  # bridge:
  #   external: true
  web:
    external: true
#+END_SRC

** pgadmin/docker-compose.yaml
Based on https://pgsnake.blogspot.com/2019/07/reverse-proxying-to-pgadmin.html
#+BEGIN_SRC yaml :tangle ~/ii/apisnoop_v3/org/pgadmin/docker-compose.yaml
version: "2.1"

services:
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    networks:
      - web
      # - bridge
    environment:
      - PGADMIN_DEFAULT_EMAIL=hh@ii.coop
      - PGADMIN_DEFAULT_PASSWORD=CHANGEME_ADMIN_PASS
    volumes:
      - migrations:/hasura-migrations
    expose:
      - "80"
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.basic.port=80"
      - "traefik.basic.protocol=http"
      - "traefik.basic.frontend.rule=Host:pgadmin.sharing.io"
      # to add more ports on the same container
      # - "traefik.admin.port=9443"
      # - "traefik.admin.protocol=https"
      # - "traefik.admin.frontend.rule=Host:admin-hasura.sharing.io"
volumes:
  migrations:
networks:
  # bridge:
  #   external: true
  web:
    external: true
#+END_SRC

* Run

#+BEGIN_SRC tmate
docker run -d -p 8080:8080 -p 80:80 -v $HOME/traefik.toml:/etc/traefik/traefik.toml traefik
#+END_SRC
* Footnotes

** Basic traefik.toml
We don't use this, but it's a quick look at the defaults:
Based on https://raw.githubusercontent.com/containous/traefik/master/traefik.sample.toml
#+BEGIN_SRC toml
[global]
  checkNewVersion = true
  sendAnonymousUsage = true

[entryPoints]
  [entryPoints.web]
  address = ":80"

[log]
level = "ERROR"
# level = "DEBUG"
filePath = os.Stdout
# filePath = "log/traefik.log"
format = "common"
# format = "json"

[accessLog]
filePath = os.Stdout
# filePath = "/path/to/log/log.txt"
format = "common"
# format = "json"

[api]
entryPoint = "traefik"
dashboard = true

[ping]
entryPoint = "traefik"

[providers.docker]
endpoint = "unix:///var/run/docker.sock"
# endpoint = "tcp://10.10.10.10:2375"
DefaultRule = ""
# DefaultRule = "Host(`{{ normalize .Name }}.docker.localhost`)"
exposedByDefault = true
#+END_SRC
