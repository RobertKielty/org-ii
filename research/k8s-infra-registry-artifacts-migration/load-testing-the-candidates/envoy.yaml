apiVersion: v1
kind: Namespace
metadata:
  name: envoy
  labels:
    cert-manager-tls: sync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    lastcfg: |
      ${ENVOY_LAST_CFG}
  labels:
    app: registry-k8s-io-envoy
  name: registry-k8s-io-envoy
  namespace: envoy
spec:
  replicas: 10
  selector:
    matchLabels:
      app: registry-k8s-io-envoy
  template:
    metadata:
      annotations:
        lastcfg: |
          ${ENVOY_LAST_CFG}
      labels:
        app: registry-k8s-io-envoy
    spec:
      containers:
      - name: envoy
        args:
        - -c
        - /etc/envoy/envoy.yaml
        image: envoyproxy/envoy-distroless:v1.20.0
        volumeMounts:
          - name: config
            mountPath: /etc/envoy/envoy.yaml
            subPath: envoy.yaml
        ports:
          - name: http
            containerPort: 10000
      volumes:
      - name: config
        configMap:
          name: envoy-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: registry-k8s-io-envoy
  name: registry-k8s-io-envoy
  namespace: envoy
spec:
  ports:
  - name: registry-k8s-io
    port: 10000
    protocol: TCP
    targetPort: 10000
  selector:
    app: registry-k8s-io-envoy
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-k8s-io-envoy
  namespace: envoy
spec:
  rules:
  - host: envoy.${SHARINGIO_PAIR_BASE_DNS_NAME}
    http:
      paths:
      - backend:
          service:
            name: registry-k8s-io-envoy
            port:
              number: 10000
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - envoy.${SHARINGIO_PAIR_BASE_DNS_NAME}
    secretName: letsencrypt-prod
